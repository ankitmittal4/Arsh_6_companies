class Solution {
public:
    vector<string> findHighAccessEmployees(vector<vector<string>>& access_times) {
        map<string, vector<int>> umap;
        for(int i=0; i<access_times.size(); i++){
            umap[access_times[i][0]].push_back(stoi(access_times[i][1]));
        }
        vector<string> ans;
        for(auto it: umap){
            vector<int> vec = it.second;
            sort(vec.begin(), vec.end());
            int cnt = 1;
            int init = 0;
            for(int i=1; i<vec.size(); i++){
                if(vec[i] - vec[init] < 100){
                    cnt++;
                }
                else{
                    init++;
                }
                if(cnt>=3){
                    ans.push_back(it.first);
                    break;
                }
            }
        }
        return ans;
    }
};
